{"id":"wSvn","dependencies":[{"name":"E:\\Django\\Django_Channels\\Team_Project\\Django_Channels_New_Version\\package.json","includedInParent":true,"mtime":1586276240592},{"name":"E:\\Django\\Django_Channels\\Team_Project\\Django_Channels_New_Version\\.babelrc","includedInParent":true,"mtime":1586270520231},{"name":"E:\\Django\\Django_Channels\\Team_Project\\Django_Channels_New_Version\\node_modules\\fbjs\\package.json","includedInParent":true,"mtime":1586270538449}],"generated":{"js":"\"use strict\";var e=/([A-Z])/g;function r(r){return r.replace(e,\"-$1\").toLowerCase()}module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":30}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":39}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":91}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":99}}],"sources":{"node_modules/fbjs/lib/hyphenate.js":"'use strict';\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n\r\nvar _uppercasePattern = /([A-Z])/g;\r\n\r\n/**\r\n * Hyphenates a camelcased string, for example:\r\n *\r\n *   > hyphenate('backgroundColor')\r\n *   < \"background-color\"\r\n *\r\n * For CSS style names, use `hyphenateStyleName` instead which works properly\r\n * with all vendor prefixes, including `ms`.\r\n *\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nfunction hyphenate(string) {\r\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\r\n}\r\n\r\nmodule.exports = hyphenate;"},"lineCount":null}},"error":null,"hash":"772e2b759d8ff39e5fe2cdded544e3de","cacheData":{"env":{}}}