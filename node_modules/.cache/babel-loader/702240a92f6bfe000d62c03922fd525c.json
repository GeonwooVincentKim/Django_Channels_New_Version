{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\r\n * To match accessibility requirement, we always provide an input in the component.\r\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\r\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\r\n *\r\n * ref:\r\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\r\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\r\n * This function is in internal usage.\r\n * Do not use it in your prod env since we may refactor this.\r\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = React.useRef(null);\n    var triggerRef = React.useRef(null);\n    var selectorRef = React.useRef(null);\n    var listRef = React.useRef(null);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        innerId = _React$useState2[0],\n        setInnerId = _React$useState2[1];\n\n    React.useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = React.useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _React$useState3 = React.useState(value || defaultValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        innerValue = _React$useState4[0],\n        setInnerValue = _React$useState4[1];\n\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\n\n    var prevValueRef = React.useRef(value);\n    React.useEffect(function () {\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\n        setInnerValue(undefined);\n      }\n\n      prevValueRef.current = value;\n    }, [value]);\n    /** Unique raw values */\n\n    var mergedRawValue = React.useMemo(function () {\n      return toInnerValue(baseValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [baseValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = React.useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeValue = _React$useState6[0],\n        setActiveValue = _React$useState6[1];\n\n    var _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        innerSearchValue = _React$useState8[0],\n        setInnerSearchValue = _React$useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && value !== undefined) {\n      mergedSearchValue = value;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = React.useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\r\n       * `tags` should fill un-list item.\r\n       * This is not cool here since TreeSelect do not need this\r\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, baseValue]);\n    var mergedFlattenOptions = React.useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]); // Display options for OptionList\n\n    var displayOptions = React.useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = React.useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]); // ============================ Selector ============================\n\n    var displayValues = React.useMemo(function () {\n      return mergedRawValue.map(function (val) {\n        var displayValue = getLabeledValue(val, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread({}, displayValue, {\n          disabled: isValueDisabled(val, mergedFlattenOptions)\n        });\n      });\n    }, [baseValue, mergedOptions]);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var outOption = findValueOption([newValue], mergedFlattenOptions)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: mergedFlattenOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    };\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: mergedFlattenOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: baseValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, mergedFlattenOptions);\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setInnerValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread({}, info, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread({}, info, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerOpen = _useMergedState2[0],\n        setInnerOpen = _useMergedState2[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText) {\n      var fromTyping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Close dropdown when disabled change\n\n\n    React.useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    React.useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\r\n     * We record input value here to check if can press to clean up by backspace\r\n     * - null: Key is not down, this is reset by key up\r\n     * - true: Search text is empty when first time backspace down\r\n     * - false: Search text is not empty when first time backspace down\r\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = React.useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        setTimeout(function () {\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        accessibilityIndex = _React$useState10[0],\n        setAccessibilityIndex = _React$useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        containerWidth = _React$useState12[0],\n        setContainerWidth = _React$useState12[1];\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSelect: onInternalSelectionSelect\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"sources":["E:/Django/Django_Channels/Team_Project/Django_Channels_New_Version/node_modules/rc-select/es/generate.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","arr2","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","KeyCode","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","prop","containerRef","useRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_React$useState","useState","_React$useState2","innerId","setInnerId","useEffect","concat","mergedId","mergedOptionLabelProp","mergedLabelInValue","isMultiple","mergedShowSearch","selectorDomRef","useImperativeHandle","focus","current","blur","_React$useState3","_React$useState4","innerValue","setInnerValue","baseValue","prevValueRef","mergedRawValue","useMemo","combobox","rawValues","Set","_React$useState5","_React$useState6","activeValue","setActiveValue","_React$useState7","_React$useState8","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","displayOptions","filteredOptions","every","opt","unshift","label","displayFlattenOptions","displayValues","map","val","displayValue","prevValue","triggerSelect","newValue","isSelect","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","triggerChange","newRawValues","skipTriggerChange","outValues","outValue","outOptions","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","BACKSPACE","removeInfo","removedValue","values","_len","rest","_key","_listRef$current","onInternalKeyUp","_len2","_key2","_listRef$current2","focusRef","onContainerFocus","includes","onContainerBlur","onInternalMouseDown","popupElement","contains","setTimeout","document","activeElement","_len3","restArgs","_key3","_React$useState9","_React$useState10","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","index","_React$useState11","_React$useState12","containerWidth","setContainerWidth","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","clearNode","onClearMouseDown","onClear","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","assign","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,kBAAkB,EAA7E;AAAkF;;AAErH,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,iDAAd,CAAN;AAAyE;;AAEzG,SAASF,gBAAT,CAA0BG,IAA1B,EAAgC;AAAE,MAAIC,MAAM,CAACC,QAAP,IAAmBjC,MAAM,CAAC+B,IAAD,CAAzB,IAAmC/B,MAAM,CAACkC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,IAA/B,MAAyC,oBAAhF,EAAsG,OAAOM,KAAK,CAACC,IAAN,CAAWP,IAAX,CAAP;AAA0B;;AAElK,SAASJ,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIW,KAAK,CAACE,OAAN,CAAcb,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIf,CAAC,GAAG,CAAR,EAAW6B,IAAI,GAAG,IAAIH,KAAJ,CAAUX,GAAG,CAACb,MAAd,CAAvB,EAA8CF,CAAC,GAAGe,GAAG,CAACb,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AAAE6B,MAAAA,IAAI,CAAC7B,CAAD,CAAJ,GAAUe,GAAG,CAACf,CAAD,CAAb;AAAmB;;AAAC,WAAO6B,IAAP;AAAc;AAAE;;AAEtK,SAASC,cAAT,CAAwBf,GAAxB,EAA6Bf,CAA7B,EAAgC;AAAE,SAAO+B,eAAe,CAAChB,GAAD,CAAf,IAAwBiB,qBAAqB,CAACjB,GAAD,EAAMf,CAAN,CAA7C,IAAyDiC,gBAAgB,EAAhF;AAAqF;;AAEvH,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAId,SAAJ,CAAc,sDAAd,CAAN;AAA8E;;AAE5G,SAASa,qBAAT,CAA+BjB,GAA/B,EAAoCf,CAApC,EAAuC;AAAE,MAAI,EAAEqB,MAAM,CAACC,QAAP,IAAmBjC,MAAM,CAAC0B,GAAD,CAAzB,IAAkC1B,MAAM,CAACkC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BV,GAA/B,MAAwC,oBAA5E,CAAJ,EAAuG;AAAE;AAAS;;AAAC,MAAImB,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;AAAgB,MAAIC,EAAE,GAAGC,SAAT;;AAAoB,MAAI;AAAE,SAAK,IAAIC,EAAE,GAAGxB,GAAG,CAACM,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCkB,EAAtC,EAA0C,EAAEL,EAAE,GAAG,CAACK,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEP,EAAE,GAAG,IAA9E,EAAoF;AAAED,MAAAA,IAAI,CAACtC,IAAL,CAAU4C,EAAE,CAAC7B,KAAb;;AAAqB,UAAIX,CAAC,IAAIkC,IAAI,CAAChC,MAAL,KAAgBF,CAAzB,EAA4B;AAAQ;AAAE,GAAvJ,CAAwJ,OAAO2C,GAAP,EAAY;AAAEP,IAAAA,EAAE,GAAG,IAAL;AAAWC,IAAAA,EAAE,GAAGM,GAAL;AAAW,GAA5L,SAAqM;AAAE,QAAI;AAAE,UAAI,CAACR,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,SAAOH,IAAP;AAAc;;AAE5gB,SAASH,eAAT,CAAyBhB,GAAzB,EAA8B;AAAE,MAAIW,KAAK,CAACE,OAAN,CAAcb,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,SAAS6B,wBAAT,CAAkCzC,MAAlC,EAA0C0C,QAA1C,EAAoD;AAAE,MAAI1C,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAG+C,6BAA6B,CAAC3C,MAAD,EAAS0C,QAAT,CAA1C;;AAA8D,MAAIxC,GAAJ,EAASL,CAAT;;AAAY,MAAIX,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIyD,gBAAgB,GAAG1D,MAAM,CAACC,qBAAP,CAA6Ba,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+C,gBAAgB,CAAC7C,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEK,MAAAA,GAAG,GAAG0C,gBAAgB,CAAC/C,CAAD,CAAtB;AAA2B,UAAI6C,QAAQ,CAACG,OAAT,CAAiB3C,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAAChB,MAAM,CAACkC,SAAP,CAAiB0B,oBAAjB,CAAsCxB,IAAtC,CAA2CtB,MAA3C,EAAmDE,GAAnD,CAAL,EAA8D;AAAUN,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAE5e,SAAS+C,6BAAT,CAAuC3C,MAAvC,EAA+C0C,QAA/C,EAAyD;AAAE,MAAI1C,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAImD,UAAU,GAAG7D,MAAM,CAACD,IAAP,CAAYe,MAAZ,CAAjB;AAAsC,MAAIE,GAAJ,EAASL,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkD,UAAU,CAAChD,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEK,IAAAA,GAAG,GAAG6C,UAAU,CAAClD,CAAD,CAAhB;AAAqB,QAAI6C,QAAQ,CAACG,OAAT,CAAiB3C,GAAjB,KAAyB,CAA7B,EAAgC;AAAUN,IAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;;AAAC,SAAON,MAAP;AAAgB;AAEnT;;;;;;;;;;AAQA,OAAO,KAAKoD,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,sBAAtC,EAA8DC,OAA9D,QAA6E,oBAA7E;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,uBAAP,MAAoC,iCAApC;AACA,IAAIC,kBAAkB,GAAG,CAAC,YAAD,EAAe,aAAf,EAA8B,WAA9B,EAA2C,aAA3C,EAA0D,kBAA1D,EAA8E,mBAA9E,EAAmG,sBAAnG,EAA2H,gBAA3H,CAAzB;AACA;;;;;AAKA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/C,MAAIC,gBAAgB,GAAGD,MAAM,CAACE,SAA9B;AAAA,MACIC,UAAU,GAAGH,MAAM,CAACI,UAAP,CAAkBC,UADnC;AAAA,MAEIC,qBAAqB,GAAGN,MAAM,CAACM,qBAFnC;AAAA,MAGIC,cAAc,GAAGP,MAAM,CAACO,cAH5B;AAAA,MAIIC,eAAe,GAAGR,MAAM,CAACQ,eAJ7B;AAAA,MAKIC,aAAa,GAAGT,MAAM,CAACS,aAL3B;AAAA,MAMIC,eAAe,GAAGV,MAAM,CAACU,eAN7B;AAAA,MAOIC,eAAe,GAAGX,MAAM,CAACW,eAP7B;AAAA,MAQIC,YAAY,GAAGZ,MAAM,CAACY,YAR1B;AAAA,MASIC,2BAA2B,GAAGb,MAAM,CAACa,2BATzC;AAAA,MAUIC,YAAY,GAAGd,MAAM,CAACc,YAV1B,CAD+C,CAWP;;AAExC,WAASC,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC1B,QAAIC,YAAJ;;AAEA,QAAIC,gBAAgB,GAAGH,KAAK,CAACd,SAA7B;AAAA,QACIA,SAAS,GAAGiB,gBAAgB,KAAK,KAAK,CAA1B,GAA8BlB,gBAA9B,GAAiDkB,gBADjE;AAAA,QAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,QAGIC,EAAE,GAAGL,KAAK,CAACK,EAHf;AAAA,QAIIC,IAAI,GAAGN,KAAK,CAACM,IAJjB;AAAA,QAKIC,WAAW,GAAGP,KAAK,CAACO,WALxB;AAAA,QAMIC,OAAO,GAAGR,KAAK,CAACQ,OANpB;AAAA,QAOIC,QAAQ,GAAGT,KAAK,CAACS,QAPrB;AAAA,QAQIC,IAAI,GAAGV,KAAK,CAACU,IARjB;AAAA,QASIrF,KAAK,GAAG2E,KAAK,CAAC3E,KATlB;AAAA,QAUIsF,YAAY,GAAGX,KAAK,CAACW,YAVzB;AAAA,QAWIC,YAAY,GAAGZ,KAAK,CAACY,YAXzB;AAAA,QAYIC,UAAU,GAAGb,KAAK,CAACa,UAZvB;AAAA,QAaIC,UAAU,GAAGd,KAAK,CAACc,UAbvB;AAAA,QAcIC,WAAW,GAAGf,KAAK,CAACe,WAdxB;AAAA,QAeIC,YAAY,GAAGhB,KAAK,CAACgB,YAfzB;AAAA,QAgBIC,qBAAqB,GAAGjB,KAAK,CAACkB,gBAhBlC;AAAA,QAiBIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,OAAnC,GAA6CA,qBAjBpE;AAAA,QAkBIE,qBAAqB,GAAGnB,KAAK,CAACoB,oBAlBlC;AAAA,QAmBIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAnBrE;AAAA,QAoBIE,QAAQ,GAAGrB,KAAK,CAACqB,QApBrB;AAAA,QAqBIC,UAAU,GAAGtB,KAAK,CAACsB,UArBvB;AAAA,QAsBIC,SAAS,GAAGvB,KAAK,CAACuB,SAtBtB;AAAA,QAuBIC,SAAS,GAAGxB,KAAK,CAACwB,SAvBtB;AAAA,QAwBIC,SAAS,GAAGzB,KAAK,CAACyB,SAxBtB;AAAA,QAyBIC,oBAAoB,GAAG1B,KAAK,CAAC0B,oBAzBjC;AAAA,QA0BIC,QAAQ,GAAG3B,KAAK,CAAC2B,QA1BrB;AAAA,QA2BIC,OAAO,GAAG5B,KAAK,CAAC4B,OA3BpB;AAAA,QA4BIC,wBAAwB,GAAG7B,KAAK,CAAC6B,wBA5BrC;AAAA,QA6BIC,qBAAqB,GAAG9B,KAAK,CAAC+B,eA7BlC;AAAA,QA8BIA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,WAAnC,GAAiDA,qBA9BvE;AAAA,QA+BIE,eAAe,GAAGhC,KAAK,CAACgC,eA/B5B;AAAA,QAgCIC,QAAQ,GAAGjC,KAAK,CAACiC,QAhCrB;AAAA,QAiCIC,eAAe,GAAGlC,KAAK,CAACkC,eAjC5B;AAAA,QAkCIC,iBAAiB,GAAGnC,KAAK,CAACmC,iBAlC9B;AAAA,QAmCIC,iBAAiB,GAAGpC,KAAK,CAACqC,UAnC9B;AAAA,QAoCIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,GAA/B,GAAqCA,iBApCtD;AAAA,QAqCIE,qBAAqB,GAAGtC,KAAK,CAACuC,cArClC;AAAA,QAsCIA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAtC7D;AAAA,QAuCIE,SAAS,GAAGxC,KAAK,CAACwC,SAvCtB;AAAA,QAwCIC,cAAc,GAAGzC,KAAK,CAACyC,cAxC3B;AAAA,QAyCIC,OAAO,GAAG1C,KAAK,CAAC0C,OAzCpB;AAAA,QA0CIC,aAAa,GAAG3C,KAAK,CAAC2C,aA1C1B;AAAA,QA2CIC,iBAAiB,GAAG5C,KAAK,CAAC4C,iBA3C9B;AAAA,QA4CIC,wBAAwB,GAAG7C,KAAK,CAAC6C,wBA5CrC;AAAA,QA6CIC,cAAc,GAAG9C,KAAK,CAAC8C,cA7C3B;AAAA,QA8CIC,aAAa,GAAG/C,KAAK,CAAC+C,aA9C1B;AAAA,QA+CIC,iBAAiB,GAAGhD,KAAK,CAACiD,UA/C9B;AAAA,QAgDIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,EAA/B,GAAoCA,iBAhDrD;AAAA,QAiDIE,eAAe,GAAGlD,KAAK,CAACkD,eAjD5B;AAAA,QAkDIC,SAAS,GAAGnD,KAAK,CAACmD,SAlDtB;AAAA,QAmDIC,aAAa,GAAGpD,KAAK,CAACoD,aAnD1B;AAAA,QAoDIC,uBAAuB,GAAGrD,KAAK,CAACqD,uBApDpC;AAAA,QAqDIC,OAAO,GAAGtD,KAAK,CAACsD,OArDpB;AAAA,QAsDIC,MAAM,GAAGvD,KAAK,CAACuD,MAtDnB;AAAA,QAuDIC,OAAO,GAAGxD,KAAK,CAACwD,OAvDpB;AAAA,QAwDIC,SAAS,GAAGzD,KAAK,CAACyD,SAxDtB;AAAA,QAyDIC,WAAW,GAAG1D,KAAK,CAAC0D,WAzDxB;AAAA,QA0DIC,QAAQ,GAAG3D,KAAK,CAAC2D,QA1DrB;AAAA,QA2DIC,QAAQ,GAAG5D,KAAK,CAAC4D,QA3DrB;AAAA,QA4DIC,UAAU,GAAG7D,KAAK,CAAC6D,UA5DvB;AAAA,QA6DIC,oBAAoB,GAAG9D,KAAK,CAAC+D,aA7DjC;AAAA,QA8DIA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,EAAlC,GAAuCA,oBA9D3D;AAAA,QA+DIE,SAAS,GAAG1G,wBAAwB,CAAC0C,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,IAA3B,EAAiC,MAAjC,EAAyC,aAAzC,EAAwD,SAAxD,EAAmE,UAAnE,EAA+E,MAA/E,EAAuF,OAAvF,EAAgG,cAAhG,EAAgH,cAAhH,EAAgI,YAAhI,EAA8I,YAA9I,EAA4J,aAA5J,EAA2K,cAA3K,EAA2L,kBAA3L,EAA+M,sBAA/M,EAAuO,UAAvO,EAAmP,YAAnP,EAAiQ,WAAjQ,EAA8Q,WAA9Q,EAA2R,WAA3R,EAAwS,sBAAxS,EAAgU,UAAhU,EAA4U,SAA5U,EAAuV,0BAAvV,EAAmX,iBAAnX,EAAsY,iBAAtY,EAAyZ,UAAzZ,EAAqa,iBAAra,EAAwb,mBAAxb,EAA6c,YAA7c,EAA2d,gBAA3d,EAA6e,WAA7e,EAA0f,gBAA1f,EAA4gB,SAA5gB,EAAuhB,eAAvhB,EAAwiB,mBAAxiB,EAA6jB,0BAA7jB,EAAylB,gBAAzlB,EAA2mB,eAA3mB,EAA4nB,YAA5nB,EAA0oB,iBAA1oB,EAA6pB,WAA7pB,EAA0qB,eAA1qB,EAA2rB,yBAA3rB,EAAstB,SAAttB,EAAiuB,QAAjuB,EAA2uB,SAA3uB,EAAsvB,WAAtvB,EAAmwB,aAAnwB,EAAkxB,UAAlxB,EAA8xB,UAA9xB,EAA0yB,YAA1yB,EAAwzB,eAAxzB,CAAR,CA/DxC;;AAiEA,QAAIiE,gBAAgB,GAAGF,aAAa,CAACG,IAAd,KAAuB/F,mBAA9C;AACA,QAAIgG,QAAQ,GAAGrE,YAAY,GAAGA,YAAY,CAACkE,SAAD,CAAf,GAA6BA,SAAxD;AACAlF,IAAAA,kBAAkB,CAAChE,OAAnB,CAA2B,UAAUsJ,IAAV,EAAgB;AACzC,aAAOD,QAAQ,CAACC,IAAD,CAAf;AACD,KAFD;AAGA,QAAIC,YAAY,GAAGxG,KAAK,CAACyG,MAAN,CAAa,IAAb,CAAnB;AACA,QAAIC,UAAU,GAAG1G,KAAK,CAACyG,MAAN,CAAa,IAAb,CAAjB;AACA,QAAIE,WAAW,GAAG3G,KAAK,CAACyG,MAAN,CAAa,IAAb,CAAlB;AACA,QAAIG,OAAO,GAAG5G,KAAK,CAACyG,MAAN,CAAa,IAAb,CAAd;AACA;;AAEA,QAAII,cAAc,GAAGhG,aAAa,EAAlC;AAAA,QACIiG,eAAe,GAAGnI,cAAc,CAACkI,cAAD,EAAiB,CAAjB,CADpC;AAAA,QAEIE,WAAW,GAAGD,eAAe,CAAC,CAAD,CAFjC;AAAA,QAGIE,cAAc,GAAGF,eAAe,CAAC,CAAD,CAHpC;AAAA,QAIIG,oBAAoB,GAAGH,eAAe,CAAC,CAAD,CAJ1C,CA/E0B,CAmFqB;;;AAG/C,QAAII,eAAe,GAAGlH,KAAK,CAACmH,QAAN,EAAtB;AAAA,QACIC,gBAAgB,GAAGzI,cAAc,CAACuI,eAAD,EAAkB,CAAlB,CADrC;AAAA,QAEIG,OAAO,GAAGD,gBAAgB,CAAC,CAAD,CAF9B;AAAA,QAGIE,UAAU,GAAGF,gBAAgB,CAAC,CAAD,CAHjC;;AAKApH,IAAAA,KAAK,CAACuH,SAAN,CAAgB,YAAY;AAC1BD,MAAAA,UAAU,CAAC,aAAaE,MAAb,CAAoB9G,OAAO,EAA3B,CAAD,CAAV;AACD,KAFD,EAEG,EAFH;AAGA,QAAI+G,QAAQ,GAAGjF,EAAE,IAAI6E,OAArB,CA9F0B,CA8FI;;AAE9B,QAAIK,qBAAqB,GAAGvD,eAA5B;;AAEA,QAAIuD,qBAAqB,KAAKvI,SAA9B,EAAyC;AACvCuI,MAAAA,qBAAqB,GAAG/E,OAAO,GAAG,OAAH,GAAa,UAA5C;AACD,KApGyB,CAoGxB;;;AAGF,QAAIgF,kBAAkB,GAAG9E,IAAI,KAAK,UAAT,GAAsB,KAAtB,GAA8BE,YAAvD;AACA,QAAI6E,UAAU,GAAG/E,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,UAA7C;AACA,QAAIgF,gBAAgB,GAAG7E,UAAU,KAAK7D,SAAf,GAA2B6D,UAA3B,GAAwC4E,UAAU,IAAI/E,IAAI,KAAK,UAAtF,CAzG0B,CAyGwE;;AAElG,QAAIiF,cAAc,GAAG9H,KAAK,CAACyG,MAAN,CAAa,IAAb,CAArB;AACAzG,IAAAA,KAAK,CAAC+H,mBAAN,CAA0B3F,GAA1B,EAA+B,YAAY;AACzC,aAAO;AACL4F,QAAAA,KAAK,EAAErB,WAAW,CAACsB,OAAZ,CAAoBD,KADtB;AAELE,QAAAA,IAAI,EAAEvB,WAAW,CAACsB,OAAZ,CAAoBC;AAFrB,OAAP;AAID,KALD,EA5G0B,CAiHtB;;AAEJ,QAAIC,gBAAgB,GAAGnI,KAAK,CAACmH,QAAN,CAAe3J,KAAK,IAAIsF,YAAxB,CAAvB;AAAA,QACIsF,gBAAgB,GAAGzJ,cAAc,CAACwJ,gBAAD,EAAmB,CAAnB,CADrC;AAAA,QAEIE,UAAU,GAAGD,gBAAgB,CAAC,CAAD,CAFjC;AAAA,QAGIE,aAAa,GAAGF,gBAAgB,CAAC,CAAD,CAHpC;;AAKA,QAAIG,SAAS,GAAG/K,KAAK,KAAK2B,SAAV,GAAsB3B,KAAtB,GAA8B6K,UAA9C,CAxH0B,CAwHgC;;AAE1D,QAAIG,YAAY,GAAGxI,KAAK,CAACyG,MAAN,CAAajJ,KAAb,CAAnB;AACAwC,IAAAA,KAAK,CAACuH,SAAN,CAAgB,YAAY;AAC1B,UAAIiB,YAAY,CAACP,OAAb,KAAyBzK,KAAzB,KAAmCA,KAAK,KAAK2B,SAAV,IAAuB3B,KAAK,KAAK,IAApE,CAAJ,EAA+E;AAC7E8K,QAAAA,aAAa,CAACnJ,SAAD,CAAb;AACD;;AAEDqJ,MAAAA,YAAY,CAACP,OAAb,GAAuBzK,KAAvB;AACD,KAND,EAMG,CAACA,KAAD,CANH;AAOA;;AAEA,QAAIiL,cAAc,GAAGzI,KAAK,CAAC0I,OAAN,CAAc,YAAY;AAC7C,aAAOnI,YAAY,CAACgI,SAAD,EAAY;AAC7BxF,QAAAA,YAAY,EAAE4E,kBADe;AAE7BgB,QAAAA,QAAQ,EAAE9F,IAAI,KAAK;AAFU,OAAZ,CAAnB;AAID,KALoB,EAKlB,CAAC0F,SAAD,EAAYZ,kBAAZ,CALkB,CAArB;AAMA;;AAEA,QAAIiB,SAAS,GAAG5I,KAAK,CAAC0I,OAAN,CAAc,YAAY;AACxC,aAAO,IAAIG,GAAJ,CAAQJ,cAAR,CAAP;AACD,KAFe,EAEb,CAACA,cAAD,CAFa,CAAhB,CA5I0B,CA8IJ;AACtB;;AAEA,QAAIK,gBAAgB,GAAG9I,KAAK,CAACmH,QAAN,CAAe,IAAf,CAAvB;AAAA,QACI4B,gBAAgB,GAAGpK,cAAc,CAACmK,gBAAD,EAAmB,CAAnB,CADrC;AAAA,QAEIE,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;AAAA,QAGIE,cAAc,GAAGF,gBAAgB,CAAC,CAAD,CAHrC;;AAKA,QAAIG,gBAAgB,GAAGlJ,KAAK,CAACmH,QAAN,CAAe,EAAf,CAAvB;AAAA,QACIgC,gBAAgB,GAAGxK,cAAc,CAACuK,gBAAD,EAAmB,CAAnB,CADrC;AAAA,QAEIE,gBAAgB,GAAGD,gBAAgB,CAAC,CAAD,CAFvC;AAAA,QAGIE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAD,CAH1C;;AAKA,QAAIG,iBAAiB,GAAGF,gBAAxB;;AAEA,QAAIvG,IAAI,KAAK,UAAT,IAAuBrF,KAAK,KAAK2B,SAArC,EAAgD;AAC9CmK,MAAAA,iBAAiB,GAAG9L,KAApB;AACD,KAFD,MAEO,IAAI0F,WAAW,KAAK/D,SAApB,EAA+B;AACpCmK,MAAAA,iBAAiB,GAAGpG,WAApB;AACD,KAFM,MAEA,IAAID,UAAJ,EAAgB;AACrBqG,MAAAA,iBAAiB,GAAGrG,UAApB;AACD;;AAED,QAAIsG,aAAa,GAAGvJ,KAAK,CAAC0I,OAAN,CAAc,YAAY;AAC5C,UAAIc,UAAU,GAAG7G,OAAjB;;AAEA,UAAI6G,UAAU,KAAKrK,SAAnB,EAA8B;AAC5BqK,QAAAA,UAAU,GAAG/H,qBAAqB,CAACmB,QAAD,CAAlC;AACD;AACD;;;;;;AAMA,UAAIC,IAAI,KAAK,MAAT,IAAmBb,2BAAvB,EAAoD;AAClDwH,QAAAA,UAAU,GAAGxH,2BAA2B,CAACwH,UAAD,EAAajB,SAAb,EAAwBb,qBAAxB,EAA+C3E,YAA/C,CAAxC;AACD;;AAED,aAAOyG,UAAU,IAAI,EAArB;AACD,KAjBmB,EAiBjB,CAAC7G,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA0B0F,SAA1B,CAjBiB,CAApB;AAkBA,QAAIkB,oBAAoB,GAAGzJ,KAAK,CAAC0I,OAAN,CAAc,YAAY;AACnD,aAAOhH,cAAc,CAAC6H,aAAD,EAAgBpH,KAAhB,CAArB;AACD,KAF0B,EAExB,CAACoH,aAAD,CAFwB,CAA3B,CAvL0B,CAyLL;;AAErB,QAAIG,cAAc,GAAG1J,KAAK,CAAC0I,OAAN,CAAc,YAAY;AAC7C,UAAI,CAACY,iBAAD,IAAsB,CAACzB,gBAA3B,EAA6C;AAC3C,eAAOlK,kBAAkB,CAAC4L,aAAD,CAAzB;AACD;;AAED,UAAII,eAAe,GAAG/H,aAAa,CAAC0H,iBAAD,EAAoBC,aAApB,EAAmC;AACpElG,QAAAA,gBAAgB,EAAEA,gBADkD;AAEpEF,QAAAA,YAAY,EAAEN,IAAI,KAAK,UAAT,IAAuBM,YAAY,KAAKhE,SAAxC,GAAoD,YAAY;AAC5E,iBAAO,IAAP;AACD,SAFa,GAEVgE;AAJgE,OAAnC,CAAnC;;AAOA,UAAIN,IAAI,KAAK,MAAT,IAAmB8G,eAAe,CAACC,KAAhB,CAAsB,UAAUC,GAAV,EAAe;AAC1D,eAAOA,GAAG,CAACrM,KAAJ,KAAc8L,iBAArB;AACD,OAFsB,CAAvB,EAEI;AACFK,QAAAA,eAAe,CAACG,OAAhB,CAAwB;AACtBtM,UAAAA,KAAK,EAAE8L,iBADe;AAEtBS,UAAAA,KAAK,EAAET,iBAFe;AAGtBpM,UAAAA,GAAG,EAAE;AAHiB,SAAxB;AAKD;;AAED,aAAOyM,eAAP;AACD,KAvBoB,EAuBlB,CAACJ,aAAD,EAAgBD,iBAAhB,EAAmCzG,IAAnC,EAAyCgF,gBAAzC,CAvBkB,CAArB;AAwBA,QAAImC,qBAAqB,GAAGhK,KAAK,CAAC0I,OAAN,CAAc,YAAY;AACpD,aAAOhH,cAAc,CAACgI,cAAD,EAAiBvH,KAAjB,CAArB;AACD,KAF2B,EAEzB,CAACuH,cAAD,CAFyB,CAA5B,CAnN0B,CAqNJ;;AAEtB,QAAIO,aAAa,GAAGjK,KAAK,CAAC0I,OAAN,CAAc,YAAY;AAC5C,aAAOD,cAAc,CAACyB,GAAf,CAAmB,UAAUC,GAAV,EAAe;AACvC,YAAIC,YAAY,GAAGzI,eAAe,CAACwI,GAAD,EAAM;AACtCxH,UAAAA,OAAO,EAAE8G,oBAD6B;AAEtCY,UAAAA,SAAS,EAAE9B,SAF2B;AAGtCxF,UAAAA,YAAY,EAAE4E,kBAHwB;AAItCxD,UAAAA,eAAe,EAAEuD;AAJqB,SAAN,CAAlC;AAMA,eAAO/K,aAAa,CAAC,EAAD,EAAKyN,YAAL,EAAmB;AACrCtG,UAAAA,QAAQ,EAAEjC,eAAe,CAACsI,GAAD,EAAMV,oBAAN;AADY,SAAnB,CAApB;AAGD,OAVM,CAAP;AAWD,KAZmB,EAYjB,CAAClB,SAAD,EAAYgB,aAAZ,CAZiB,CAApB;;AAcA,QAAIe,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2CxN,MAA3C,EAAmD;AACrE,UAAIyN,SAAS,GAAG3I,eAAe,CAAC,CAACyI,QAAD,CAAD,EAAad,oBAAb,CAAf,CAAkD,CAAlD,CAAhB;;AAEA,UAAI,CAACvD,aAAa,CAACwE,iBAAnB,EAAsC;AACpC;AACA,YAAIC,WAAW,GAAGhD,kBAAkB,GAAGhG,eAAe,CAAC4I,QAAD,EAAW;AAC/D5H,UAAAA,OAAO,EAAE8G,oBADsD;AAE/DY,UAAAA,SAAS,EAAE9B,SAFoD;AAG/DxF,UAAAA,YAAY,EAAE4E,kBAHiD;AAI/DxD,UAAAA,eAAe,EAAEuD;AAJ8C,SAAX,CAAlB,GAK/B6C,QALL;;AAOA,YAAIC,QAAQ,IAAIzE,QAAhB,EAA0B;AACxBA,UAAAA,QAAQ,CAAC4E,WAAD,EAAcF,SAAd,CAAR;AACD,SAFD,MAEO,IAAI,CAACD,QAAD,IAAaxE,UAAjB,EAA6B;AAClCA,UAAAA,UAAU,CAAC2E,WAAD,EAAcF,SAAd,CAAV;AACD;AACF,OAjBoE,CAiBnE;;;AAGF,UAAIrE,gBAAJ,EAAsB;AACpB,YAAIoE,QAAQ,IAAItE,aAAa,CAAC0E,WAA9B,EAA2C;AACzC1E,UAAAA,aAAa,CAAC0E,WAAd,CAA0BL,QAA1B,EAAoCE,SAApC,EAA+CzN,MAA/C;AACD,SAFD,MAEO,IAAI,CAACwN,QAAD,IAAatE,aAAa,CAAC2E,aAA/B,EAA8C;AACnD3E,UAAAA,aAAa,CAAC2E,aAAd,CAA4BN,QAA5B,EAAsCE,SAAtC,EAAiDzN,MAAjD;AACD;AACF;AACF,KA3BD;;AA6BA,QAAI8N,aAAa,GAAG,SAASA,aAAT,CAAuBC,YAAvB,EAAqC;AACvD,UAAI3E,gBAAgB,IAAIF,aAAa,CAAC8E,iBAAtC,EAAyD;AACvD;AACD;;AAED,UAAIC,SAAS,GAAGzK,aAAa,CAACjC,KAAK,CAACC,IAAN,CAAWuM,YAAX,CAAD,EAA2B;AACtDhI,QAAAA,YAAY,EAAE4E,kBADwC;AAEtDhF,QAAAA,OAAO,EAAE8G,oBAF6C;AAGtD9H,QAAAA,eAAe,EAAEA,eAHqC;AAItD0I,QAAAA,SAAS,EAAE9B,SAJ2C;AAKtDpE,QAAAA,eAAe,EAAEuD;AALqC,OAA3B,CAA7B;AAOA,UAAIwD,QAAQ,GAAGtD,UAAU,GAAGqD,SAAH,GAAeA,SAAS,CAAC,CAAD,CAAjD,CAZuD,CAYD;;AAEtD,UAAInF,QAAQ,KAAK2C,cAAc,CAAC1L,MAAf,KAA0B,CAA1B,IAA+BkO,SAAS,CAAClO,MAAV,KAAqB,CAAzD,CAAZ,EAAyE;AACvE,YAAIoO,UAAU,GAAGrJ,eAAe,CAACiJ,YAAD,EAAetB,oBAAf,CAAhC;AACA3D,QAAAA,QAAQ,CAACoF,QAAD,EAAWtD,UAAU,GAAGuD,UAAH,GAAgBA,UAAU,CAAC,CAAD,CAA/C,CAAR;AACD;;AAED7C,MAAAA,aAAa,CAAC4C,QAAD,CAAb;AACD,KApBD;;AAsBA,QAAIE,gBAAgB,GAAG,SAASA,gBAAT,CAA0Bb,QAA1B,EAAoCc,IAApC,EAA0C;AAC/D,UAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,UACItO,MAAM,GAAGqO,IAAI,CAACrO,MADlB;;AAGA,UAAI8G,QAAJ,EAAc;AACZ;AACD;;AAED,UAAIyH,WAAJ;;AAEA,UAAI3D,UAAJ,EAAgB;AACd2D,QAAAA,WAAW,GAAG,IAAI1C,GAAJ,CAAQJ,cAAR,CAAd;;AAEA,YAAI6C,QAAJ,EAAc;AACZC,UAAAA,WAAW,CAACC,GAAZ,CAAgBjB,QAAhB;AACD,SAFD,MAEO;AACLgB,UAAAA,WAAW,CAACE,MAAZ,CAAmBlB,QAAnB;AACD;AACF,OARD,MAQO;AACLgB,QAAAA,WAAW,GAAG,IAAI1C,GAAJ,EAAd;AACA0C,QAAAA,WAAW,CAACC,GAAZ,CAAgBjB,QAAhB;AACD,OArB8D,CAqB7D;;;AAGF,UAAI3C,UAAU,IAAI,CAACA,UAAD,IAAerJ,KAAK,CAACC,IAAN,CAAWiK,cAAX,EAA2B,CAA3B,MAAkC8B,QAAnE,EAA6E;AAC3EO,QAAAA,aAAa,CAACvM,KAAK,CAACC,IAAN,CAAW+M,WAAX,CAAD,CAAb;AACD,OA1B8D,CA0B7D;;;AAGFjB,MAAAA,aAAa,CAACC,QAAD,EAAW,CAAC3C,UAAD,IAAe0D,QAA1B,EAAoCtO,MAApC,CAAb,CA7B+D,CA6BL;;AAE1D,UAAI6F,IAAI,KAAK,UAAb,EAAyB;AACvBwG,QAAAA,mBAAmB,CAACqC,MAAM,CAACnB,QAAD,CAAP,CAAnB;AACAtB,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD,OAHD,MAGO,IAAI,CAACrB,UAAD,IAAerE,oBAAnB,EAAyC;AAC9C8F,QAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAJ,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,KAtCD;;AAwCA,QAAI0C,sBAAsB,GAAG,SAASA,sBAAT,CAAgCpB,QAAhC,EAA0CqB,IAA1C,EAAgD;AAC3ER,MAAAA,gBAAgB,CAACb,QAAD,EAAW5N,aAAa,CAAC,EAAD,EAAKiP,IAAL,EAAW;AACjD5O,QAAAA,MAAM,EAAE;AADyC,OAAX,CAAxB,CAAhB;AAGD,KAJD;;AAMA,QAAI6O,yBAAyB,GAAG,SAASA,yBAAT,CAAmCtB,QAAnC,EAA6CqB,IAA7C,EAAmD;AACjFR,MAAAA,gBAAgB,CAACb,QAAD,EAAW5N,aAAa,CAAC,EAAD,EAAKiP,IAAL,EAAW;AACjD5O,QAAAA,MAAM,EAAE;AADyC,OAAX,CAAxB,CAAhB;AAGD,KAJD,CAtU0B,CA0UvB;AACH;;;AAGA,QAAI8O,qBAAqB,GAAGjJ,IAAI,KAAK,UAAT,IAAuBwB,eAAvB,IAA0CA,eAAe,EAAzD,IAA+D,IAA3F,CA9U0B,CA8UuE;;AAEjG,QAAI0H,eAAe,GAAG5L,cAAc,CAAChB,SAAD,EAAY;AAC9C2D,MAAAA,YAAY,EAAEJ,WADgC;AAE9ClF,MAAAA,KAAK,EAAEiF;AAFuC,KAAZ,CAApC;AAAA,QAIIuJ,gBAAgB,GAAGrN,cAAc,CAACoN,eAAD,EAAkB,CAAlB,CAJrC;AAAA,QAKIE,SAAS,GAAGD,gBAAgB,CAAC,CAAD,CALhC;AAAA,QAMIE,YAAY,GAAGF,gBAAgB,CAAC,CAAD,CANnC;;AAQA,QAAIG,UAAU,GAAGF,SAAjB,CAxV0B,CAwVE;;AAE5B,QAAIG,gBAAgB,GAAG,CAAClI,eAAD,IAAoB,CAACwF,cAAc,CAAC3M,MAA3D;;AAEA,QAAI+G,QAAQ,IAAIsI,gBAAgB,IAAID,UAApB,IAAkCtJ,IAAI,KAAK,UAA3D,EAAuE;AACrEsJ,MAAAA,UAAU,GAAG,KAAb;AACD;;AAED,QAAIE,WAAW,GAAGD,gBAAgB,GAAG,KAAH,GAAWD,UAA7C;;AAEA,QAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAChD,UAAIC,QAAQ,GAAGD,OAAO,KAAKpN,SAAZ,GAAwBoN,OAAxB,GAAkC,CAACJ,UAAlD;;AAEA,UAAIF,SAAS,KAAKO,QAAd,IAA0B,CAAC1I,QAA/B,EAAyC;AACvCoI,QAAAA,YAAY,CAACM,QAAD,CAAZ;;AAEA,YAAIhH,uBAAJ,EAA6B;AAC3BA,UAAAA,uBAAuB,CAACgH,QAAD,CAAvB;AACD;AACF;AACF,KAVD;;AAYAxL,IAAAA,uBAAuB,CAAC,CAACwF,YAAY,CAACyB,OAAd,EAAuBvB,UAAU,CAACuB,OAAX,IAAsBvB,UAAU,CAACuB,OAAX,CAAmBwE,eAAnB,EAA7C,CAAD,EAAqFJ,WAArF,EAAkGC,YAAlG,CAAvB,CA9W0B,CA8W8G;;AAExI,QAAII,aAAa,GAAG,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AACrD,UAAIC,UAAU,GAAG9P,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBqC,SAAzC,GAAqDrC,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAArF;AACA,UAAI+P,GAAG,GAAG,IAAV;AACA,UAAIC,aAAa,GAAGH,UAApB;AACA1D,MAAAA,cAAc,CAAC,IAAD,CAAd,CAJqD,CAI/B;;AAEtB,UAAI8D,WAAW,GAAGhM,mBAAmB,CAAC4L,UAAD,EAAatH,eAAb,CAArC;AACA,UAAI2H,cAAc,GAAGD,WAArB;;AAEA,UAAIlK,IAAI,KAAK,UAAb,EAAyB;AACvB;AACA,YAAI+J,UAAJ,EAAgB;AACd9B,UAAAA,aAAa,CAAC,CAACgC,aAAD,CAAD,CAAb;AACD;AACF,OALD,MAKO,IAAIC,WAAJ,EAAiB;AACtBD,QAAAA,aAAa,GAAG,EAAhB;;AAEA,YAAIjK,IAAI,KAAK,MAAb,EAAqB;AACnBmK,UAAAA,cAAc,GAAGD,WAAW,CAAC7C,GAAZ,CAAgB,UAAUH,KAAV,EAAiB;AAChD,gBAAIkD,IAAI,GAAGxD,oBAAoB,CAACyD,IAArB,CAA0B,UAAUC,KAAV,EAAiB;AACpD,kBAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,qBAAOA,IAAI,CAAC1F,qBAAD,CAAJ,KAAgCqC,KAAvC;AACD,aAHU,CAAX;AAIA,mBAAOkD,IAAI,GAAGA,IAAI,CAACG,IAAL,CAAU5P,KAAb,GAAqB,IAAhC;AACD,WANgB,EAMdnB,MANc,CAMP,UAAU8N,GAAV,EAAe;AACvB,mBAAOA,GAAG,KAAK,IAAf;AACD,WARgB,CAAjB;AASD;;AAED,YAAIY,YAAY,GAAGxM,KAAK,CAACC,IAAN,CAAW,IAAIqK,GAAJ,CAAQ,GAAGrB,MAAH,CAAU7J,kBAAkB,CAAC8K,cAAD,CAA5B,EAA8C9K,kBAAkB,CAACqP,cAAD,CAAhE,CAAR,CAAX,CAAnB;AACAlC,QAAAA,aAAa,CAACC,YAAD,CAAb;AACAA,QAAAA,YAAY,CAAC9N,OAAb,CAAqB,UAAUsO,WAAV,EAAuB;AAC1CjB,UAAAA,aAAa,CAACiB,WAAD,EAAc,IAAd,EAAoB,OAApB,CAAb;AACD,SAFD,EAjBsB,CAmBlB;;AAEJe,QAAAA,YAAY,CAAC,KAAD,CAAZ,CArBsB,CAqBD;;AAErBO,QAAAA,GAAG,GAAG,KAAN;AACD;;AAEDxD,MAAAA,mBAAmB,CAACyD,aAAD,CAAnB;;AAEA,UAAItJ,QAAQ,IAAI8F,iBAAiB,KAAKwD,aAAtC,EAAqD;AACnDtJ,QAAAA,QAAQ,CAACsJ,aAAD,CAAR;AACD;;AAED,aAAOD,GAAP;AACD,KA/CD,CAhX0B,CA+ZvB;;;AAGH7M,IAAAA,KAAK,CAACuH,SAAN,CAAgB,YAAY;AAC1B,UAAI0E,SAAS,IAAI,CAAC,CAACnI,QAAnB,EAA6B;AAC3BoI,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAJD,EAIG,CAACpI,QAAD,CAJH,EAla0B,CAsaV;;AAEhB9D,IAAAA,KAAK,CAACuH,SAAN,CAAgB,YAAY;AAC1B,UAAI,CAAC4E,UAAD,IAAe,CAACvE,UAAhB,IAA8B/E,IAAI,KAAK,UAA3C,EAAuD;AACrD6J,QAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,CAAb;AACD;AACF,KAJD,EAIG,CAACP,UAAD,CAJH,EAxa0B,CA4aR;;AAElB;;;;;;;AAOA,QAAIkB,QAAQ,GAAGzM,OAAO,EAAtB;AAAA,QACI0M,SAAS,GAAG3O,cAAc,CAAC0O,QAAD,EAAW,CAAX,CAD9B;AAAA,QAEIE,YAAY,GAAGD,SAAS,CAAC,CAAD,CAF5B;AAAA,QAGIE,YAAY,GAAGF,SAAS,CAAC,CAAD,CAH5B,CArb0B,CAwbO;;;AAGjC,QAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AACxD,UAAIC,SAAS,GAAGJ,YAAY,EAA5B;AACA,UAAIK,KAAK,GAAGF,KAAK,CAACE,KAAlB,CAFwD,CAE/B;;AAEzB,UAAI,CAACzB,UAAD,IAAeyB,KAAK,KAAK3N,OAAO,CAAC4N,KAArC,EAA4C;AAC1CvB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAEDkB,MAAAA,YAAY,CAAC,CAAC,CAAClE,iBAAH,CAAZ,CARwD,CAQrB;;AAEnC,UAAIsE,KAAK,KAAK3N,OAAO,CAAC6N,SAAlB,IAA+B,CAACH,SAAhC,IAA6C/F,UAA7C,IAA2D,CAAC0B,iBAA5D,IAAiFb,cAAc,CAAC1L,MAApG,EAA4G;AAC1G,YAAIgR,UAAU,GAAGtN,sBAAsB,CAACwJ,aAAD,EAAgBxB,cAAhB,CAAvC;;AAEA,YAAIsF,UAAU,CAACC,YAAX,KAA4B,IAAhC,EAAsC;AACpClD,UAAAA,aAAa,CAACiD,UAAU,CAACE,MAAZ,CAAb;AACA3D,UAAAA,aAAa,CAACyD,UAAU,CAACC,YAAZ,EAA0B,KAA1B,EAAiC,OAAjC,CAAb;AACD;AACF;;AAED,WAAK,IAAIE,IAAI,GAAGpR,SAAS,CAACC,MAArB,EAA6BoR,IAAI,GAAG,IAAI5P,KAAJ,CAAU2P,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEE,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGF,IAA9F,EAAoGE,IAAI,EAAxG,EAA4G;AAC1GD,QAAAA,IAAI,CAACC,IAAI,GAAG,CAAR,CAAJ,GAAiBtR,SAAS,CAACsR,IAAD,CAA1B;AACD;;AAED,UAAIjC,UAAU,IAAIvF,OAAO,CAACqB,OAA1B,EAAmC;AACjC,YAAIoG,gBAAJ;;AAEA,SAACA,gBAAgB,GAAGzH,OAAO,CAACqB,OAA5B,EAAqCrC,SAArC,CAA+ClJ,KAA/C,CAAqD2R,gBAArD,EAAuE,CAACX,KAAD,EAAQlG,MAAR,CAAe2G,IAAf,CAAvE;AACD;;AAED,UAAIvI,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAAClJ,KAAV,CAAgB,KAAK,CAArB,EAAwB,CAACgR,KAAD,EAAQlG,MAAR,CAAe2G,IAAf,CAAxB;AACD;AACF,KAhCD,CA3b0B,CA2dvB;;;AAGH,QAAIG,eAAe,GAAG,SAASA,eAAT,CAAyBZ,KAAzB,EAAgC;AACpD,WAAK,IAAIa,KAAK,GAAGzR,SAAS,CAACC,MAAtB,EAA8BoR,IAAI,GAAG,IAAI5P,KAAJ,CAAUgQ,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHL,QAAAA,IAAI,CAACK,KAAK,GAAG,CAAT,CAAJ,GAAkB1R,SAAS,CAAC0R,KAAD,CAA3B;AACD;;AAED,UAAIrC,UAAU,IAAIvF,OAAO,CAACqB,OAA1B,EAAmC;AACjC,YAAIwG,iBAAJ;;AAEA,SAACA,iBAAiB,GAAG7H,OAAO,CAACqB,OAA7B,EAAsCtC,OAAtC,CAA8CjJ,KAA9C,CAAoD+R,iBAApD,EAAuE,CAACf,KAAD,EAAQlG,MAAR,CAAe2G,IAAf,CAAvE;AACD;;AAED,UAAIxI,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACjJ,KAAR,CAAc,KAAK,CAAnB,EAAsB,CAACgR,KAAD,EAAQlG,MAAR,CAAe2G,IAAf,CAAtB;AACD;AACF,KAdD,CA9d0B,CA4evB;;AAEH;;;AAGA,QAAIO,QAAQ,GAAG1O,KAAK,CAACyG,MAAN,CAAa,KAAb,CAAf;;AAEA,QAAIkI,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AACjD3H,MAAAA,cAAc,CAAC,IAAD,CAAd;;AAEA,UAAI,CAAClD,QAAL,EAAe;AACb,YAAI2B,OAAO,IAAI,CAACiJ,QAAQ,CAACzG,OAAzB,EAAkC;AAChCxC,UAAAA,OAAO,CAAC/I,KAAR,CAAc,KAAK,CAAnB,EAAsBI,SAAtB;AACD,SAHY,CAGX;;;AAGF,YAAIsI,UAAU,CAACwJ,QAAX,CAAoB,OAApB,CAAJ,EAAkC;AAChCtC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF;;AAEDoC,MAAAA,QAAQ,CAACzG,OAAT,GAAmB,IAAnB;AACD,KAfD;;AAiBA,QAAI4G,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C7H,MAAAA,cAAc,CAAC,KAAD,EAAQ,YAAY;AAChC0H,QAAAA,QAAQ,CAACzG,OAAT,GAAmB,KAAnB;AACAqE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHa,CAAd;;AAKA,UAAIxI,QAAJ,EAAc;AACZ;AACD;;AAED,UAAIwF,iBAAJ,EAAuB;AACrB;AACA,YAAIzG,IAAI,KAAK,MAAb,EAAqB;AACnB6J,UAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,CAAb;AACA5B,UAAAA,aAAa,CAACvM,KAAK,CAACC,IAAN,CAAW,IAAIqK,GAAJ,CAAQ,GAAGrB,MAAH,CAAU7J,kBAAkB,CAAC8K,cAAD,CAA5B,EAA8C,CAACa,iBAAD,CAA9C,CAAR,CAAX,CAAD,CAAb;AACD,SAHD,MAGO,IAAIzG,IAAI,KAAK,UAAb,EAAyB;AAC9B;AACAwG,UAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD;AACF;;AAED,UAAI3D,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAAChJ,KAAP,CAAa,KAAK,CAAlB,EAAqBI,SAArB;AACD;AACF,KAxBD;;AA0BA,QAAIgS,mBAAmB,GAAG,SAASA,mBAAT,CAA6BpB,KAA7B,EAAoC;AAC5D,UAAI9Q,MAAM,GAAG8Q,KAAK,CAAC9Q,MAAnB;AACA,UAAImS,YAAY,GAAGrI,UAAU,CAACuB,OAAX,IAAsBvB,UAAU,CAACuB,OAAX,CAAmBwE,eAAnB,EAAzC,CAF4D,CAEmB;;AAE/E,UAAIsC,YAAY,IAAIA,YAAY,CAACC,QAAb,CAAsBpS,MAAtB,CAApB,EAAmD;AACjDqS,QAAAA,UAAU,CAAC,YAAY;AACrBhI,UAAAA,oBAAoB;;AAEpB,cAAI,CAAC8H,YAAY,CAACC,QAAb,CAAsBE,QAAQ,CAACC,aAA/B,CAAL,EAAoD;AAClDxI,YAAAA,WAAW,CAACsB,OAAZ,CAAoBD,KAApB;AACD;AACF,SANS,CAAV;AAOD;;AAED,UAAInC,WAAJ,EAAiB;AACf,aAAK,IAAIuJ,KAAK,GAAGtS,SAAS,CAACC,MAAtB,EAA8BsS,QAAQ,GAAG,IAAI9Q,KAAJ,CAAU6Q,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAAzC,EAA+EE,KAAK,GAAG,CAA5F,EAA+FA,KAAK,GAAGF,KAAvG,EAA8GE,KAAK,EAAnH,EAAuH;AACrHD,UAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,GAAsBxS,SAAS,CAACwS,KAAD,CAA/B;AACD;;AAEDzJ,QAAAA,WAAW,CAACnJ,KAAZ,CAAkB,KAAK,CAAvB,EAA0B,CAACgR,KAAD,EAAQlG,MAAR,CAAe6H,QAAf,CAA1B;AACD;AACF,KArBD,CA9hB0B,CAmjBvB;;;AAGH,QAAIE,gBAAgB,GAAGvP,KAAK,CAACmH,QAAN,CAAe,CAAf,CAAvB;AAAA,QACIqI,iBAAiB,GAAG7Q,cAAc,CAAC4Q,gBAAD,EAAmB,CAAnB,CADtC;AAAA,QAEIE,kBAAkB,GAAGD,iBAAiB,CAAC,CAAD,CAF1C;AAAA,QAGIE,qBAAqB,GAAGF,iBAAiB,CAAC,CAAD,CAH7C;;AAKA,QAAIG,8BAA8B,GAAG3L,wBAAwB,KAAK7E,SAA7B,GAAyC6E,wBAAzC,GAAoEnB,IAAI,KAAK,UAAlH;;AAEA,QAAI+M,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;AACxDJ,MAAAA,qBAAqB,CAACI,KAAD,CAArB;;AAEA,UAAI1L,QAAQ,IAAIvB,IAAI,KAAK,UAArB,IAAmCgN,MAAM,KAAK,IAAlD,EAAwD;AACtD5G,QAAAA,cAAc,CAACyC,MAAM,CAACmE,MAAD,CAAP,CAAd;AACD;AACF,KAND,CA7jB0B,CAmkBvB;;;AAGH,QAAIE,iBAAiB,GAAG/P,KAAK,CAACmH,QAAN,CAAe,IAAf,CAAxB;AAAA,QACI6I,iBAAiB,GAAGrR,cAAc,CAACoR,iBAAD,EAAoB,CAApB,CADtC;AAAA,QAEIE,cAAc,GAAGD,iBAAiB,CAAC,CAAD,CAFtC;AAAA,QAGIE,iBAAiB,GAAGF,iBAAiB,CAAC,CAAD,CAHzC;;AAKAlP,IAAAA,eAAe,CAAC,YAAY;AAC1B,UAAIuL,WAAJ,EAAiB;AACf,YAAI8D,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAU7J,YAAY,CAACyB,OAAb,CAAqBqI,WAA/B,CAAf;;AAEA,YAAIL,cAAc,KAAKE,QAAvB,EAAiC;AAC/BD,UAAAA,iBAAiB,CAACC,QAAD,CAAjB;AACD;AACF;AACF,KARc,EAQZ,CAAC9D,WAAD,CARY,CAAf;AASA,QAAIkE,SAAS,GAAGvQ,KAAK,CAACwQ,aAAN,CAAoBlP,UAApB,EAAgC;AAC9Cc,MAAAA,GAAG,EAAEwE,OADyC;AAE9CvF,MAAAA,SAAS,EAAEA,SAFmC;AAG9CmB,MAAAA,EAAE,EAAEiF,QAH0C;AAI9ChF,MAAAA,IAAI,EAAE0J,UAJwC;AAK9CsE,MAAAA,cAAc,EAAE,CAAC9N,OAL6B;AAM9CA,MAAAA,OAAO,EAAE+G,cANqC;AAO9ChI,MAAAA,cAAc,EAAEsI,qBAP8B;AAQ9C0G,MAAAA,QAAQ,EAAE9I,UARoC;AAS9CqG,MAAAA,MAAM,EAAErF,SATsC;AAU9C+H,MAAAA,MAAM,EAAEnM,UAVsC;AAW9CoM,MAAAA,UAAU,EAAElM,cAXkC;AAY9CqB,MAAAA,QAAQ,EAAE4F,sBAZoC;AAa9CW,MAAAA,YAAY,EAAEA,YAbgC;AAc9CsD,MAAAA,aAAa,EAAEA,aAd+B;AAe9C5L,MAAAA,wBAAwB,EAAE2L,8BAfoB;AAgB9CzL,MAAAA,eAAe,EAAEA,eAhB6B;AAiB9C2M,MAAAA,QAAQ,EAAEtL,aAjBoC;AAkB9CrC,MAAAA,WAAW,EAAEoG,iBAlBiC;AAmB9CzF,MAAAA,oBAAoB,EAAEA,oBAnBwB;AAoB9CgB,MAAAA,OAAO,EAAEA,OAAO,KAAK,KAAZ,IAAqBG,wBAAwB,KAAK;AApBb,KAAhC,CAAhB,CAplB0B,CAymBtB;;AAEJ,QAAI8L,SAAJ;;AAEA,QAAIC,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AACjD;AACA,UAAI3K,gBAAgB,IAAIF,aAAa,CAAC8K,OAAtC,EAA+C;AAC7C9K,QAAAA,aAAa,CAAC8K,OAAd;AACD;;AAEDlG,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA4B,MAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,CAAb;AACD,KARD;;AAUA,QAAI,CAAC5I,QAAD,IAAaL,UAAb,KAA4BgF,cAAc,CAAC1L,MAAf,IAAyBuM,iBAArD,CAAJ,EAA6E;AAC3EwH,MAAAA,SAAS,GAAG9Q,KAAK,CAACwQ,aAAN,CAAoB7P,QAApB,EAA8B;AACxC4B,QAAAA,SAAS,EAAE,GAAGiF,MAAH,CAAUnG,SAAV,EAAqB,QAArB,CAD6B;AAExCwE,QAAAA,WAAW,EAAEkL,gBAF2B;AAGxCE,QAAAA,aAAa,EAAEvN;AAHyB,OAA9B,EAIT,MAJS,CAAZ;AAKD,KA7nByB,CA6nBxB;;;AAGF,QAAIwN,eAAe,GAAGvN,SAAS,KAAKxE,SAAd,GAA0BwE,SAA1B,GAAsCI,OAAO,IAAI,CAAC6D,UAAD,IAAe/E,IAAI,KAAK,UAA/F;AACA,QAAIsO,SAAJ;;AAEA,QAAID,eAAJ,EAAqB;AACnBC,MAAAA,SAAS,GAAGnR,KAAK,CAACwQ,aAAN,CAAoB7P,QAApB,EAA8B;AACxC4B,QAAAA,SAAS,EAAErC,UAAU,CAAC,GAAGsH,MAAH,CAAUnG,SAAV,EAAqB,QAArB,CAAD,EAAiClE,eAAe,CAAC,EAAD,EAAK,GAAGqK,MAAH,CAAUnG,SAAV,EAAqB,gBAArB,CAAL,EAA6C0C,OAA7C,CAAhD,CADmB;AAExCkN,QAAAA,aAAa,EAAErN,SAFyB;AAGxCwN,QAAAA,kBAAkB,EAAE;AAClBrN,UAAAA,OAAO,EAAEA,OADS;AAElBb,UAAAA,WAAW,EAAEoG,iBAFK;AAGlB7G,UAAAA,IAAI,EAAE0J,UAHY;AAIlBkF,UAAAA,OAAO,EAAEtK,WAJS;AAKlB/D,UAAAA,UAAU,EAAE6E;AALM;AAHoB,OAA9B,CAAZ;AAWD,KA/oByB,CA+oBxB;;;AAGF,QAAIyJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCzP,YAA7C,EAA2D;AACzDA,MAAAA,YAAY,CAACI,KAAD,CAAZ;AACD,KAppByB,CAopBxB;;;AAGF,QAAIsP,eAAe,GAAGvR,UAAU,CAACmB,SAAD,EAAYkB,SAAZ,GAAwBF,YAAY,GAAG,EAAf,EAAmBlF,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,UAArB,CAAf,EAAiD0F,WAAjD,CAAlC,EAAiG5J,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,WAArB,CAAf,EAAkDuG,UAAlD,CAAhH,EAA+KzK,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,SAArB,CAAf,EAAgD,CAACuG,UAAjD,CAA9L,EAA4PzK,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,cAArB,CAAf,EAAqDoC,UAArD,CAA3Q,EAA6UtG,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,aAArB,CAAf,EAAoD6P,eAApD,CAA5V,EAAka/T,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,WAArB,CAAf,EAAkDyC,QAAlD,CAAjb,EAA8e3G,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,UAArB,CAAf,EAAiD0C,OAAjD,CAA7f,EAAwjB5G,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,OAArB,CAAf,EAA8C8K,UAA9C,CAAvkB,EAAkoBhP,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,kBAArB,CAAf,EAAyDyK,qBAAzD,CAAjpB,EAAkuB3O,eAAe,CAACkF,YAAD,EAAe,GAAGmF,MAAH,CAAUnG,SAAV,EAAqB,cAArB,CAAf,EAAqDwG,gBAArD,CAAjvB,EAAyzBxF,YAAj1B,EAAhC;AACA,WAAOrC,KAAK,CAACwQ,aAAN,CAAoB,KAApB,EAA2BtU,MAAM,CAACwV,MAAP,CAAc;AAC9CnP,MAAAA,SAAS,EAAEkP;AADmC,KAAd,EAE/BnL,QAF+B,EAErB;AACXlE,MAAAA,GAAG,EAAEoE,YADM;AAEXX,MAAAA,WAAW,EAAEiJ,mBAFF;AAGXlJ,MAAAA,SAAS,EAAE6H,iBAHA;AAIX9H,MAAAA,OAAO,EAAE2I,eAJE;AAKX7I,MAAAA,OAAO,EAAEkJ,gBALE;AAMXjJ,MAAAA,MAAM,EAAEmJ;AANG,KAFqB,CAA3B,EASH9H,WAAW,IAAI,CAACoF,UAAhB,IAA8BnM,KAAK,CAACwQ,aAAN,CAAoB,MAApB,EAA4B;AAC5DmB,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,CADF;AAELjB,QAAAA,MAAM,EAAE,CAFH;AAGLkB,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,QAAQ,EAAE,QAJL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OADqD;AAQ5D,mBAAa;AAR+C,KAA5B,EAS/B,GAAGvK,MAAH,CAAUiB,cAAc,CAACuJ,IAAf,CAAoB,IAApB,CAAV,CAT+B,CAT3B,EAkBmChS,KAAK,CAACwQ,aAAN,CAAoBnQ,aAApB,EAAmC;AAC3E+B,MAAAA,GAAG,EAAEsE,UADsE;AAE3E5C,MAAAA,QAAQ,EAAEA,QAFiE;AAG3EzC,MAAAA,SAAS,EAAEA,SAHgE;AAI3E4Q,MAAAA,OAAO,EAAE5F,WAJkE;AAK3E0C,MAAAA,YAAY,EAAEwB,SAL6D;AAM3EN,MAAAA,cAAc,EAAEA,cAN2D;AAO3EtL,MAAAA,SAAS,EAAEA,SAPgE;AAQ3EC,MAAAA,cAAc,EAAEA,cAR2D;AAS3EE,MAAAA,aAAa,EAAEA,aAT4D;AAU3EC,MAAAA,iBAAiB,EAAEA,iBAVwD;AAW3EC,MAAAA,wBAAwB,EAAEA,wBAXiD;AAY3EC,MAAAA,cAAc,EAAEA,cAZ2D;AAa3EC,MAAAA,aAAa,EAAEA,aAb4D;AAc3EZ,MAAAA,iBAAiB,EAAEA,iBAdwD;AAe3E4N,MAAAA,KAAK,EAAE,CAAC3I,aAAa,CAACxM,MAfqD;AAgB3EoV,MAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,eAAOrK,cAAc,CAACG,OAAtB;AACD;AAlB0E,KAAnC,EAmBvCjI,KAAK,CAACwQ,aAAN,CAAoBpQ,QAApB,EAA8BlE,MAAM,CAACwV,MAAP,CAAc,EAAd,EAAkBvP,KAAlB,EAAyB;AACxDiQ,MAAAA,MAAM,EAAEtK,cADgD;AAExDzG,MAAAA,SAAS,EAAEA,SAF6C;AAGxDgR,MAAAA,YAAY,EAAEvG,qBAH0C;AAIxD1J,MAAAA,GAAG,EAAEuE,WAJmD;AAKxDnE,MAAAA,EAAE,EAAEiF,QALoD;AAMxDzE,MAAAA,UAAU,EAAE6E,gBAN4C;AAOxDhF,MAAAA,IAAI,EAAEA,IAPkD;AAQxD4M,MAAAA,kBAAkB,EAAEA,kBARoC;AASxDiB,MAAAA,QAAQ,EAAE9I,UAT8C;AAUxDtC,MAAAA,SAAS,EAAEA,SAV6C;AAWxD2I,MAAAA,MAAM,EAAEhE,aAXgD;AAYxDxH,MAAAA,IAAI,EAAE0J,UAZkD;AAaxDG,MAAAA,YAAY,EAAEA,YAb0C;AAcxDpJ,MAAAA,WAAW,EAAEoG,iBAd2C;AAexDN,MAAAA,WAAW,EAAEA,WAf2C;AAgBxDxF,MAAAA,QAAQ,EAAEkJ,aAhB8C;AAiBxD3G,MAAAA,QAAQ,EAAE8F;AAjB8C,KAAzB,CAA9B,CAnBuC,CAlBnC,EAuDDsF,SAvDC,EAuDUL,SAvDV,CAAP;AAwDD;;AAED,MAAIwB,SAAS,GAAGtS,KAAK,CAACuS,UAAN,CAAiBrQ,MAAjB,CAAhB;AACA,SAAOoQ,SAAP;AACD","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\r\n\r\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\n/**\r\n * To match accessibility requirement, we always provide an input in the component.\r\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\r\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\r\n *\r\n * ref:\r\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\r\n */\r\nimport * as React from 'react';\r\nimport KeyCode from \"rc-util/es/KeyCode\";\r\nimport classNames from 'classnames';\r\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\r\nimport Selector from './Selector';\r\nimport SelectTrigger from './SelectTrigger';\r\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\r\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\r\nimport TransBtn from './TransBtn';\r\nimport useLock from './hooks/useLock';\r\nimport useDelayReset from './hooks/useDelayReset';\r\nimport useLayoutEffect from './hooks/useLayoutEffect';\r\nimport { getSeparatedContent } from './utils/valueUtil';\r\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\r\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\r\n/**\r\n * This function is in internal usage.\r\n * Do not use it in your prod env since we may refactor this.\r\n */\r\n\r\nexport default function generateSelector(config) {\r\n  var defaultPrefixCls = config.prefixCls,\r\n      OptionList = config.components.optionList,\r\n      convertChildrenToData = config.convertChildrenToData,\r\n      flattenOptions = config.flattenOptions,\r\n      getLabeledValue = config.getLabeledValue,\r\n      filterOptions = config.filterOptions,\r\n      isValueDisabled = config.isValueDisabled,\r\n      findValueOption = config.findValueOption,\r\n      warningProps = config.warningProps,\r\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\r\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\r\n\r\n  function Select(props, ref) {\r\n    var _classNames2;\r\n\r\n    var _props$prefixCls = props.prefixCls,\r\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\r\n        className = props.className,\r\n        id = props.id,\r\n        open = props.open,\r\n        defaultOpen = props.defaultOpen,\r\n        options = props.options,\r\n        children = props.children,\r\n        mode = props.mode,\r\n        value = props.value,\r\n        defaultValue = props.defaultValue,\r\n        labelInValue = props.labelInValue,\r\n        showSearch = props.showSearch,\r\n        inputValue = props.inputValue,\r\n        searchValue = props.searchValue,\r\n        filterOption = props.filterOption,\r\n        _props$optionFilterPr = props.optionFilterProp,\r\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\r\n        _props$autoClearSearc = props.autoClearSearchValue,\r\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\r\n        onSearch = props.onSearch,\r\n        allowClear = props.allowClear,\r\n        clearIcon = props.clearIcon,\r\n        showArrow = props.showArrow,\r\n        inputIcon = props.inputIcon,\r\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\r\n        disabled = props.disabled,\r\n        loading = props.loading,\r\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\r\n        _props$notFoundConten = props.notFoundContent,\r\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\r\n        optionLabelProp = props.optionLabelProp,\r\n        backfill = props.backfill,\r\n        getInputElement = props.getInputElement,\r\n        getPopupContainer = props.getPopupContainer,\r\n        _props$listHeight = props.listHeight,\r\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\r\n        _props$listItemHeight = props.listItemHeight,\r\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\r\n        animation = props.animation,\r\n        transitionName = props.transitionName,\r\n        virtual = props.virtual,\r\n        dropdownStyle = props.dropdownStyle,\r\n        dropdownClassName = props.dropdownClassName,\r\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\r\n        dropdownRender = props.dropdownRender,\r\n        dropdownAlign = props.dropdownAlign,\r\n        _props$showAction = props.showAction,\r\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\r\n        tokenSeparators = props.tokenSeparators,\r\n        tagRender = props.tagRender,\r\n        onPopupScroll = props.onPopupScroll,\r\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\r\n        onFocus = props.onFocus,\r\n        onBlur = props.onBlur,\r\n        onKeyUp = props.onKeyUp,\r\n        onKeyDown = props.onKeyDown,\r\n        onMouseDown = props.onMouseDown,\r\n        onChange = props.onChange,\r\n        onSelect = props.onSelect,\r\n        onDeselect = props.onDeselect,\r\n        _props$internalProps = props.internalProps,\r\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\r\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\r\n\r\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\r\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\r\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\r\n      delete domProps[prop];\r\n    });\r\n    var containerRef = React.useRef(null);\r\n    var triggerRef = React.useRef(null);\r\n    var selectorRef = React.useRef(null);\r\n    var listRef = React.useRef(null);\r\n    /** Used for component focused management */\r\n\r\n    var _useDelayReset = useDelayReset(),\r\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\r\n        mockFocused = _useDelayReset2[0],\r\n        setMockFocused = _useDelayReset2[1],\r\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\r\n\r\n\r\n    var _React$useState = React.useState(),\r\n        _React$useState2 = _slicedToArray(_React$useState, 2),\r\n        innerId = _React$useState2[0],\r\n        setInnerId = _React$useState2[1];\r\n\r\n    React.useEffect(function () {\r\n      setInnerId(\"rc_select_\".concat(getUUID()));\r\n    }, []);\r\n    var mergedId = id || innerId; // optionLabelProp\r\n\r\n    var mergedOptionLabelProp = optionLabelProp;\r\n\r\n    if (mergedOptionLabelProp === undefined) {\r\n      mergedOptionLabelProp = options ? 'label' : 'children';\r\n    } // labelInValue\r\n\r\n\r\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\r\n    var isMultiple = mode === 'tags' || mode === 'multiple';\r\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\r\n\r\n    var selectorDomRef = React.useRef(null);\r\n    React.useImperativeHandle(ref, function () {\r\n      return {\r\n        focus: selectorRef.current.focus,\r\n        blur: selectorRef.current.blur\r\n      };\r\n    }); // ============================= Value ==============================\r\n\r\n    var _React$useState3 = React.useState(value || defaultValue),\r\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n        innerValue = _React$useState4[0],\r\n        setInnerValue = _React$useState4[1];\r\n\r\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\r\n\r\n    var prevValueRef = React.useRef(value);\r\n    React.useEffect(function () {\r\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\r\n        setInnerValue(undefined);\r\n      }\r\n\r\n      prevValueRef.current = value;\r\n    }, [value]);\r\n    /** Unique raw values */\r\n\r\n    var mergedRawValue = React.useMemo(function () {\r\n      return toInnerValue(baseValue, {\r\n        labelInValue: mergedLabelInValue,\r\n        combobox: mode === 'combobox'\r\n      });\r\n    }, [baseValue, mergedLabelInValue]);\r\n    /** We cache a set of raw values to speed up check */\r\n\r\n    var rawValues = React.useMemo(function () {\r\n      return new Set(mergedRawValue);\r\n    }, [mergedRawValue]); // ============================= Option =============================\r\n    // Set by option list active, it will merge into search input when mode is `combobox`\r\n\r\n    var _React$useState5 = React.useState(null),\r\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\r\n        activeValue = _React$useState6[0],\r\n        setActiveValue = _React$useState6[1];\r\n\r\n    var _React$useState7 = React.useState(''),\r\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\r\n        innerSearchValue = _React$useState8[0],\r\n        setInnerSearchValue = _React$useState8[1];\r\n\r\n    var mergedSearchValue = innerSearchValue;\r\n\r\n    if (mode === 'combobox' && value !== undefined) {\r\n      mergedSearchValue = value;\r\n    } else if (searchValue !== undefined) {\r\n      mergedSearchValue = searchValue;\r\n    } else if (inputValue) {\r\n      mergedSearchValue = inputValue;\r\n    }\r\n\r\n    var mergedOptions = React.useMemo(function () {\r\n      var newOptions = options;\r\n\r\n      if (newOptions === undefined) {\r\n        newOptions = convertChildrenToData(children);\r\n      }\r\n      /**\r\n       * `tags` should fill un-list item.\r\n       * This is not cool here since TreeSelect do not need this\r\n       */\r\n\r\n\r\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\r\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\r\n      }\r\n\r\n      return newOptions || [];\r\n    }, [options, children, mode, baseValue]);\r\n    var mergedFlattenOptions = React.useMemo(function () {\r\n      return flattenOptions(mergedOptions, props);\r\n    }, [mergedOptions]); // Display options for OptionList\r\n\r\n    var displayOptions = React.useMemo(function () {\r\n      if (!mergedSearchValue || !mergedShowSearch) {\r\n        return _toConsumableArray(mergedOptions);\r\n      }\r\n\r\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\r\n        optionFilterProp: optionFilterProp,\r\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\r\n          return true;\r\n        } : filterOption\r\n      });\r\n\r\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\r\n        return opt.value !== mergedSearchValue;\r\n      })) {\r\n        filteredOptions.unshift({\r\n          value: mergedSearchValue,\r\n          label: mergedSearchValue,\r\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\r\n        });\r\n      }\r\n\r\n      return filteredOptions;\r\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\r\n    var displayFlattenOptions = React.useMemo(function () {\r\n      return flattenOptions(displayOptions, props);\r\n    }, [displayOptions]); // ============================ Selector ============================\r\n\r\n    var displayValues = React.useMemo(function () {\r\n      return mergedRawValue.map(function (val) {\r\n        var displayValue = getLabeledValue(val, {\r\n          options: mergedFlattenOptions,\r\n          prevValue: baseValue,\r\n          labelInValue: mergedLabelInValue,\r\n          optionLabelProp: mergedOptionLabelProp\r\n        });\r\n        return _objectSpread({}, displayValue, {\r\n          disabled: isValueDisabled(val, mergedFlattenOptions)\r\n        });\r\n      });\r\n    }, [baseValue, mergedOptions]);\r\n\r\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\r\n      var outOption = findValueOption([newValue], mergedFlattenOptions)[0];\r\n\r\n      if (!internalProps.skipTriggerSelect) {\r\n        // Skip trigger `onSelect` or `onDeselect` if configured\r\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\r\n          options: mergedFlattenOptions,\r\n          prevValue: baseValue,\r\n          labelInValue: mergedLabelInValue,\r\n          optionLabelProp: mergedOptionLabelProp\r\n        }) : newValue;\r\n\r\n        if (isSelect && onSelect) {\r\n          onSelect(selectValue, outOption);\r\n        } else if (!isSelect && onDeselect) {\r\n          onDeselect(selectValue, outOption);\r\n        }\r\n      } // Trigger internal event\r\n\r\n\r\n      if (useInternalProps) {\r\n        if (isSelect && internalProps.onRawSelect) {\r\n          internalProps.onRawSelect(newValue, outOption, source);\r\n        } else if (!isSelect && internalProps.onRawDeselect) {\r\n          internalProps.onRawDeselect(newValue, outOption, source);\r\n        }\r\n      }\r\n    };\r\n\r\n    var triggerChange = function triggerChange(newRawValues) {\r\n      if (useInternalProps && internalProps.skipTriggerChange) {\r\n        return;\r\n      }\r\n\r\n      var outValues = toOuterValues(Array.from(newRawValues), {\r\n        labelInValue: mergedLabelInValue,\r\n        options: mergedFlattenOptions,\r\n        getLabeledValue: getLabeledValue,\r\n        prevValue: baseValue,\r\n        optionLabelProp: mergedOptionLabelProp\r\n      });\r\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\r\n\r\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\r\n        var outOptions = findValueOption(newRawValues, mergedFlattenOptions);\r\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\r\n      }\r\n\r\n      setInnerValue(outValue);\r\n    };\r\n\r\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\r\n      var selected = _ref.selected,\r\n          source = _ref.source;\r\n\r\n      if (disabled) {\r\n        return;\r\n      }\r\n\r\n      var newRawValue;\r\n\r\n      if (isMultiple) {\r\n        newRawValue = new Set(mergedRawValue);\r\n\r\n        if (selected) {\r\n          newRawValue.add(newValue);\r\n        } else {\r\n          newRawValue.delete(newValue);\r\n        }\r\n      } else {\r\n        newRawValue = new Set();\r\n        newRawValue.add(newValue);\r\n      } // Multiple always trigger change and single should change if value changed\r\n\r\n\r\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\r\n        triggerChange(Array.from(newRawValue));\r\n      } // Trigger `onSelect`. Single mode always trigger select\r\n\r\n\r\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\r\n\r\n      if (mode === 'combobox') {\r\n        setInnerSearchValue(String(newValue));\r\n        setActiveValue('');\r\n      } else if (!isMultiple || autoClearSearchValue) {\r\n        setInnerSearchValue('');\r\n        setActiveValue('');\r\n      }\r\n    };\r\n\r\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\r\n      onInternalSelect(newValue, _objectSpread({}, info, {\r\n        source: 'option'\r\n      }));\r\n    };\r\n\r\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\r\n      onInternalSelect(newValue, _objectSpread({}, info, {\r\n        source: 'selection'\r\n      }));\r\n    }; // ============================= Input ==============================\r\n    // Only works in `combobox`\r\n\r\n\r\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\r\n\r\n    var _useMergedState = useMergedState(undefined, {\r\n      defaultValue: defaultOpen,\r\n      value: open\r\n    }),\r\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\r\n        innerOpen = _useMergedState2[0],\r\n        setInnerOpen = _useMergedState2[1];\r\n\r\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\r\n\r\n    var emptyListContent = !notFoundContent && !displayOptions.length;\r\n\r\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\r\n      mergedOpen = false;\r\n    }\r\n\r\n    var triggerOpen = emptyListContent ? false : mergedOpen;\r\n\r\n    var onToggleOpen = function onToggleOpen(newOpen) {\r\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\r\n\r\n      if (innerOpen !== nextOpen && !disabled) {\r\n        setInnerOpen(nextOpen);\r\n\r\n        if (onDropdownVisibleChange) {\r\n          onDropdownVisibleChange(nextOpen);\r\n        }\r\n      }\r\n    };\r\n\r\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\r\n\r\n    var triggerSearch = function triggerSearch(searchText) {\r\n      var fromTyping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\r\n      var ret = true;\r\n      var newSearchText = searchText;\r\n      setActiveValue(null); // Check if match the `tokenSeparators`\r\n\r\n      var patchLabels = getSeparatedContent(searchText, tokenSeparators);\r\n      var patchRawValues = patchLabels;\r\n\r\n      if (mode === 'combobox') {\r\n        // Only typing will trigger onChange\r\n        if (fromTyping) {\r\n          triggerChange([newSearchText]);\r\n        }\r\n      } else if (patchLabels) {\r\n        newSearchText = '';\r\n\r\n        if (mode !== 'tags') {\r\n          patchRawValues = patchLabels.map(function (label) {\r\n            var item = mergedFlattenOptions.find(function (_ref2) {\r\n              var data = _ref2.data;\r\n              return data[mergedOptionLabelProp] === label;\r\n            });\r\n            return item ? item.data.value : null;\r\n          }).filter(function (val) {\r\n            return val !== null;\r\n          });\r\n        }\r\n\r\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\r\n        triggerChange(newRawValues);\r\n        newRawValues.forEach(function (newRawValue) {\r\n          triggerSelect(newRawValue, true, 'input');\r\n        }); // Should close when paste finish\r\n\r\n        onToggleOpen(false); // Tell Selector that break next actions\r\n\r\n        ret = false;\r\n      }\r\n\r\n      setInnerSearchValue(newSearchText);\r\n\r\n      if (onSearch && mergedSearchValue !== newSearchText) {\r\n        onSearch(newSearchText);\r\n      }\r\n\r\n      return ret;\r\n    }; // Close dropdown when disabled change\r\n\r\n\r\n    React.useEffect(function () {\r\n      if (innerOpen && !!disabled) {\r\n        setInnerOpen(false);\r\n      }\r\n    }, [disabled]); // Close will clean up single mode search text\r\n\r\n    React.useEffect(function () {\r\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\r\n        triggerSearch('', false);\r\n      }\r\n    }, [mergedOpen]); // ============================ Keyboard ============================\r\n\r\n    /**\r\n     * We record input value here to check if can press to clean up by backspace\r\n     * - null: Key is not down, this is reset by key up\r\n     * - true: Search text is empty when first time backspace down\r\n     * - false: Search text is not empty when first time backspace down\r\n     */\r\n\r\n    var _useLock = useLock(),\r\n        _useLock2 = _slicedToArray(_useLock, 2),\r\n        getClearLock = _useLock2[0],\r\n        setClearLock = _useLock2[1]; // KeyDown\r\n\r\n\r\n    var onInternalKeyDown = function onInternalKeyDown(event) {\r\n      var clearLock = getClearLock();\r\n      var which = event.which; // We only manage open state here, close logic should handle by list component\r\n\r\n      if (!mergedOpen && which === KeyCode.ENTER) {\r\n        onToggleOpen(true);\r\n      }\r\n\r\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\r\n\r\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\r\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\r\n\r\n        if (removeInfo.removedValue !== null) {\r\n          triggerChange(removeInfo.values);\r\n          triggerSelect(removeInfo.removedValue, false, 'input');\r\n        }\r\n      }\r\n\r\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        rest[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      if (mergedOpen && listRef.current) {\r\n        var _listRef$current;\r\n\r\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\r\n      }\r\n\r\n      if (onKeyDown) {\r\n        onKeyDown.apply(void 0, [event].concat(rest));\r\n      }\r\n    }; // KeyUp\r\n\r\n\r\n    var onInternalKeyUp = function onInternalKeyUp(event) {\r\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n        rest[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      if (mergedOpen && listRef.current) {\r\n        var _listRef$current2;\r\n\r\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\r\n      }\r\n\r\n      if (onKeyUp) {\r\n        onKeyUp.apply(void 0, [event].concat(rest));\r\n      }\r\n    }; // ========================== Focus / Blur ==========================\r\n\r\n    /** Record real focus status */\r\n\r\n\r\n    var focusRef = React.useRef(false);\r\n\r\n    var onContainerFocus = function onContainerFocus() {\r\n      setMockFocused(true);\r\n\r\n      if (!disabled) {\r\n        if (onFocus && !focusRef.current) {\r\n          onFocus.apply(void 0, arguments);\r\n        } // `showAction` should handle `focus` if set\r\n\r\n\r\n        if (showAction.includes('focus')) {\r\n          onToggleOpen(true);\r\n        }\r\n      }\r\n\r\n      focusRef.current = true;\r\n    };\r\n\r\n    var onContainerBlur = function onContainerBlur() {\r\n      setMockFocused(false, function () {\r\n        focusRef.current = false;\r\n        onToggleOpen(false);\r\n      });\r\n\r\n      if (disabled) {\r\n        return;\r\n      }\r\n\r\n      if (mergedSearchValue) {\r\n        // `tags` mode should move `searchValue` into values\r\n        if (mode === 'tags') {\r\n          triggerSearch('', false);\r\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\r\n        } else if (mode === 'multiple') {\r\n          // `multiple` mode only clean the search value but not trigger event\r\n          setInnerSearchValue('');\r\n        }\r\n      }\r\n\r\n      if (onBlur) {\r\n        onBlur.apply(void 0, arguments);\r\n      }\r\n    };\r\n\r\n    var onInternalMouseDown = function onInternalMouseDown(event) {\r\n      var target = event.target;\r\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\r\n\r\n      if (popupElement && popupElement.contains(target)) {\r\n        setTimeout(function () {\r\n          cancelSetMockFocused();\r\n\r\n          if (!popupElement.contains(document.activeElement)) {\r\n            selectorRef.current.focus();\r\n          }\r\n        });\r\n      }\r\n\r\n      if (onMouseDown) {\r\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\r\n          restArgs[_key3 - 1] = arguments[_key3];\r\n        }\r\n\r\n        onMouseDown.apply(void 0, [event].concat(restArgs));\r\n      }\r\n    }; // ========================= Accessibility ==========================\r\n\r\n\r\n    var _React$useState9 = React.useState(0),\r\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\r\n        accessibilityIndex = _React$useState10[0],\r\n        setAccessibilityIndex = _React$useState10[1];\r\n\r\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\r\n\r\n    var onActiveValue = function onActiveValue(active, index) {\r\n      setAccessibilityIndex(index);\r\n\r\n      if (backfill && mode === 'combobox' && active !== null) {\r\n        setActiveValue(String(active));\r\n      }\r\n    }; // ============================= Popup ==============================\r\n\r\n\r\n    var _React$useState11 = React.useState(null),\r\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\r\n        containerWidth = _React$useState12[0],\r\n        setContainerWidth = _React$useState12[1];\r\n\r\n    useLayoutEffect(function () {\r\n      if (triggerOpen) {\r\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\r\n\r\n        if (containerWidth !== newWidth) {\r\n          setContainerWidth(newWidth);\r\n        }\r\n      }\r\n    }, [triggerOpen]);\r\n    var popupNode = React.createElement(OptionList, {\r\n      ref: listRef,\r\n      prefixCls: prefixCls,\r\n      id: mergedId,\r\n      open: mergedOpen,\r\n      childrenAsData: !options,\r\n      options: displayOptions,\r\n      flattenOptions: displayFlattenOptions,\r\n      multiple: isMultiple,\r\n      values: rawValues,\r\n      height: listHeight,\r\n      itemHeight: listItemHeight,\r\n      onSelect: onInternalOptionSelect,\r\n      onToggleOpen: onToggleOpen,\r\n      onActiveValue: onActiveValue,\r\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\r\n      notFoundContent: notFoundContent,\r\n      onScroll: onPopupScroll,\r\n      searchValue: mergedSearchValue,\r\n      menuItemSelectedIcon: menuItemSelectedIcon,\r\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\r\n    }); // ============================= Clear ==============================\r\n\r\n    var clearNode;\r\n\r\n    var onClearMouseDown = function onClearMouseDown() {\r\n      // Trigger internal `onClear` event\r\n      if (useInternalProps && internalProps.onClear) {\r\n        internalProps.onClear();\r\n      }\r\n\r\n      triggerChange([]);\r\n      triggerSearch('', false);\r\n    };\r\n\r\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\r\n      clearNode = React.createElement(TransBtn, {\r\n        className: \"\".concat(prefixCls, \"-clear\"),\r\n        onMouseDown: onClearMouseDown,\r\n        customizeIcon: clearIcon\r\n      }, \"\\xD7\");\r\n    } // ============================= Arrow ==============================\r\n\r\n\r\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\r\n    var arrowNode;\r\n\r\n    if (mergedShowArrow) {\r\n      arrowNode = React.createElement(TransBtn, {\r\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\r\n        customizeIcon: inputIcon,\r\n        customizeIconProps: {\r\n          loading: loading,\r\n          searchValue: mergedSearchValue,\r\n          open: mergedOpen,\r\n          focused: mockFocused,\r\n          showSearch: mergedShowSearch\r\n        }\r\n      });\r\n    } // ============================ Warning =============================\r\n\r\n\r\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\r\n      warningProps(props);\r\n    } // ============================= Render =============================\r\n\r\n\r\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\r\n    return React.createElement(\"div\", Object.assign({\r\n      className: mergedClassName\r\n    }, domProps, {\r\n      ref: containerRef,\r\n      onMouseDown: onInternalMouseDown,\r\n      onKeyDown: onInternalKeyDown,\r\n      onKeyUp: onInternalKeyUp,\r\n      onFocus: onContainerFocus,\r\n      onBlur: onContainerBlur\r\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\r\n      style: {\r\n        width: 0,\r\n        height: 0,\r\n        display: 'flex',\r\n        overflow: 'hidden',\r\n        opacity: 0\r\n      },\r\n      \"aria-live\": \"polite\"\r\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\r\n      ref: triggerRef,\r\n      disabled: disabled,\r\n      prefixCls: prefixCls,\r\n      visible: triggerOpen,\r\n      popupElement: popupNode,\r\n      containerWidth: containerWidth,\r\n      animation: animation,\r\n      transitionName: transitionName,\r\n      dropdownStyle: dropdownStyle,\r\n      dropdownClassName: dropdownClassName,\r\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\r\n      dropdownRender: dropdownRender,\r\n      dropdownAlign: dropdownAlign,\r\n      getPopupContainer: getPopupContainer,\r\n      empty: !mergedOptions.length,\r\n      getTriggerDOMNode: function getTriggerDOMNode() {\r\n        return selectorDomRef.current;\r\n      }\r\n    }, React.createElement(Selector, Object.assign({}, props, {\r\n      domRef: selectorDomRef,\r\n      prefixCls: prefixCls,\r\n      inputElement: customizeInputElement,\r\n      ref: selectorRef,\r\n      id: mergedId,\r\n      showSearch: mergedShowSearch,\r\n      mode: mode,\r\n      accessibilityIndex: accessibilityIndex,\r\n      multiple: isMultiple,\r\n      tagRender: tagRender,\r\n      values: displayValues,\r\n      open: mergedOpen,\r\n      onToggleOpen: onToggleOpen,\r\n      searchValue: mergedSearchValue,\r\n      activeValue: activeValue,\r\n      onSearch: triggerSearch,\r\n      onSelect: onInternalSelectionSelect\r\n    }))), arrowNode, clearNode);\r\n  }\r\n\r\n  var RefSelect = React.forwardRef(Select);\r\n  return RefSelect;\r\n}"]},"metadata":{},"sourceType":"module"}